# processors		2 2 1			# El numero de procesadores total que uso es el producto de los 3

# Ejecutar el script de Python para obtener un número primo aleatorio y guardar en un archivo
shell python3 generate_prime.py


# Leer el número primo desde el archivo
variable seed file prime_seed.txt


# Comandos generales
atom_style granular
boundary f f f
units si
communicate single vel yes
newton off

include sim.params
variable diameter equal ${Particle_diameter}
variable orifice_radius equal ${Orifice_radius}

# Variables del sistema
variable xmin equal -101*${diameter}
variable xmax equal 101*${diameter}
variable ymin equal -1.0*${diameter}
variable ymax equal 1.0*${diameter}
variable zmin equal -0.1*${diameter}
variable zmax equal 660*${diameter}

variable dt equal 1e-6
variable natoms equal 3


# Variables de los materiales
variable youngmodulus1 equal ${YoungModulus}
variable youngmodulus2 equal ${YoungModulus}
variable youngmodulus3 equal ${YoungModulus}

variable poisson1 equal 0.3
variable poisson2 equal 0.3
variable poisson3 equal 0.3

variable CoR11 equal 0.9
variable CoR12 equal 0.9
variable CoR13 equal 0.9
variable CoR21 equal 0.9
variable CoR22 equal 0.9
variable CoR23 equal 0.9
variable CoR31 equal 0.9
variable CoR32 equal 0.9
variable CoR33 equal 0.9

variable sf11 equal 0.5
variable sf12 equal 0.5
variable sf13 equal 0.5
variable sf21 equal 0.5
variable sf22 equal 0.5
variable sf23 equal 0.5
variable sf31 equal 0.5
variable sf32 equal 0.5
variable sf33 equal 0.5

variable radius equal ${Particle_radius}
variable density equal ${Density}


# Variables de la simulación
variable filltime equal 3.5
variable fillmass equal 16 #250
variable fillmassrate equal ${fillmass}/${filltime}
variable fillsteps equal ${filltime}/${dt}

variable openvel equal 2.0*${Orifice_diameter}
variable opentime equal 1
variable opensteps equal ${opentime}/${dt}

variable dumptime equal 0.01
variable dumpstep equal ${dumptime}/${dt}
variable dumptime2 equal ${dt}
variable dumpstep2 equal ${dumptime2}/${dt}

variable MinEnerg equal 10e-7


# Comandos de LIGGGHTS
region reg block ${xmin} ${xmax} ${ymin} ${ymax} ${zmin} ${zmax} units box
create_box 3 reg
neighbor 0.004 bin
neigh_modify delay 0
pair_style gran model hertz tangential history
pair_coeff * *
timestep ${dt}
fix integrator all nve/sphere
fix gravi all gravity ${Gravity} vector 0.0 0.0 -1.0


# Definir las propiedades de las partículas
fix m1 all property/global youngsModulus peratomtype ${youngmodulus1} ${youngmodulus2} ${youngmodulus3}
fix m2 all property/global poissonsRatio peratomtype ${poisson1} ${poisson2} ${poisson3}
fix m3 all property/global coefficientRestitution peratomtypepair ${natoms} ${CoR11} ${CoR12} ${CoR13} ${CoR21} ${CoR22} ${CoR23} ${CoR31} ${CoR32} ${CoR33}
fix m4 all property/global coefficientFriction peratomtypepair ${natoms} ${sf11} ${sf12} ${sf13} ${sf21} ${sf22} ${sf23} ${sf31} ${sf32} ${sf33}


# Crear las mallas físicas
fix silo all mesh/surface file Silo.stl type 3 curvature_tolerant yes
fix lid all mesh/surface file Lid.stl type 3 curvature_tolerant yes
fix walls all wall/gran model hertz tangential history  mesh n_meshes 2 meshes silo lid


# Crear las mallas de utilidad
fix exit_mesh all mesh/surface/planar file Lid.stl type 3


# Posicion particula fija
variable fija_z equal ${diameter}/2.0
variable fija_x equal ${orifice_radius}+${radius}
variable fija_y equal 0.0

create_atoms 2 single ${fija_x} ${fija_y} ${fija_z} units box
create_atoms 2 single -${fija_x} ${fija_y} ${fija_z} units box
group g2 type 2
set group g2 diameter ${diameter}
set group g2 density ${density}
fix orifice g2 freeze


# Crear las partículas
fix pts all particletemplate/sphere 10487 atom_type 1 density constant ${density} radius constant ${radius}
fix pdd all particledistribution/discrete 32452867 1 pts 1.0
fix ins_mesh all mesh/surface/planar file Insertionsface.stl type 1
fix ins all insert/stream seed ${seed} distributiontemplate pdd &
    mass ${fillmass} massrate ${fillmassrate} insert_every 100000 overlapcheck yes all_in yes vel constant 0 0 -0.95 &
    insertion_face ins_mesh 


# Crear los archivos de salida
shell mkdir post
dump dmpparticle all custom/vtk ${dumpstep} post/particles_*.vtk id type x y z vx vy vz fx fy fz radius mass
dump dmpsilo all mesh/stl ${dumpstep} post/Silo*.stl silo
dump dmplid all mesh/stl ${dumpstep} post/Lid*.stl lid

# Guardar backup
restart 1000000 poly.restart

# Correr llenado
run ${fillsteps}
unfix ins


# Minimización de la energía
compute energ all ke update_on_run_end yes
label settle_loop
run 1000000
variable curr_energ equal c_energ
if "${curr_energ} > ${MinEnerg}" then "jump SELF settle_loop"


# Medición de caudal
group g1 type 1
fix mass g1 massflow/mesh mesh exit_mesh vec_side 0. 0. -1.
variable  MassTotal equal f_mass[1]
variable  NoPTotal  equal f_mass[2]
variable  MassFlow  equal f_mass[3]
variable  NoPFlow   equal f_mass[4]
variable  tiempo    equal ${dt}*step


# Imprimir las mediciones de caudal
fix output all print ${dumpstep2} "${tiempo},${MassTotal},${MassFlow},${NoPTotal},${NoPFlow}" screen no file Measurements.csv title "Time,MassTotal,MassFlow,NoPTotal,NoPFlow"

# Variables para monitorear el flujo
variable no_flow_steps equal 0

# Calcular pasos para 5 segundos
variable time_window equal 5.0
variable steps_window equal ${time_window}/${dt}
variable minFlow equal 10e-2

# Abrir el silo
fix MoveLid all move/mesh mesh lid linear ${openvel} 0. 0.
run ${opensteps}
unfix MoveLid

run 1000000

# Bucle de descarga
label loop_start
run 1000000
variable flow equal ${NoPFlow}


if "(${flow} < ${minFlow})" then &
	"variable no_flow_steps equal ${no_flow_steps}+1000000" &
else &
	"variable no_flow_steps equal 0"

if "(${no_flow_steps} < ${steps_window})" then &
	"jump SELF end_loop" &
else &
	"jump SELF loop_start"

label end_loop

